@model IEnumerable<TokuCinema.Models.VideoRelease>

@{
    ViewBag.Title = "Video Release Index";

    int iterationCounter = 0; /* Used for dynamically naming the collapsable divs */

    // Data context
    TokuCinema.Models.TokuCinema_DataEntities db = new TokuCinema.Models.TokuCinema_DataEntities();
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@foreach (var item in Model.OrderBy(i => i.ReleaseDate))
{

    // Get all media decendents
    TokuCinema.Services.PresentationService.ReleaseDecendents releaseDecendents = new TokuCinema.Services.PresentationService.ReleaseDecendents();
    releaseDecendents = TokuCinema.Services.PresentationService.GetReleaseDecendents(item.VideoReleaseId);

    iterationCounter++;
    string iterationCollapseName = "collapse" + iterationCounter.ToString();

    <div class="jumbotron row">

        @*Video Releases*@

        <div>
            <h2>@Html.ActionLink(TokuCinema.Services.PresentationService.GetReleaseName(item), "Edit", new { id = item.VideoReleaseId })</h2>
            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", new { id = item.VideoReleaseId })</p><br />
            <div class="col-md-4">
                <label>@Html.DisplayNameFor(i => i.Distributor) </label><p>@Html.DisplayFor(modelItem => item.Distributor.DistributorName)</p>
                <label>@Html.DisplayNameFor(i => i.ReleaseDate)</label><p>@Html.DisplayFor(modelItem => item.ReleaseDate)</p>
            </div>
            <div class="col-md-4">
                <label>@Html.DisplayNameFor(i => i.CatalogCode)</label><p>@Html.DisplayFor(modelItem => item.CatalogCode)</p>
                <label>@Html.DisplayNameFor(i => i.UPC)</label><p>@Html.DisplayFor(modelItem => item.UPC)</p>
            </div>
            <div class="col-md-4">
                <label>@Html.DisplayNameFor(i => i.DiscCount)</label><p>@Html.DisplayFor(modelItem => item.DiscCount)</p>
                <label>@Html.DisplayNameFor(i => i.Packaging)</label><p>@Html.DisplayFor(modelItem => item.Packaging.PackagingName)</p>
            </div>
            <hr />
        </div>

        @*Accordion start*@

        <div id="accordion" role="tablist" aria-multiselectable="true">
            <div>
                <div role="tab" id="headingOne">
                    <h4>
                        <a class="glyphicon glyphicon-chevron-right" data-toggle="collapse" data-parent="#accordion" href='#@iterationCollapseName' aria-expanded="false" aria-controls="collapseOne">
                            Details
                        </a>
                    </h4>
                </div>
                <div id='@iterationCollapseName' class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">

                    @*Universal Add Dropdown*@
                    <ul style="list-style:none;">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown"> Add Child Records <i class="glyphicon glyphicon-collapse-down"></i></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Insert Subtitle Tracks", "Create", "SubtitleTracks", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Audio Track", "Create", "AudioTracks", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Region", "Create", "Regions", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Media File", "Create", "MediaFiles", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Standard", "Create", "Standards", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Video Box Set", "Create", "VideoBoxSets", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Shopping Item", "Create", "Shopping Items", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Format", "Create", "Formats", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Video Version", "Create", "VideoVersions", new { id = item.VideoReleaseId }, null)</li>
                                <li>@Html.ActionLink("Insert Video Review", "Create", "VideoReviews", new { id = item.VideoReleaseId }, null)</li>
                            </ul>
                        </li>
                    </ul>


                    @*Subtitle Tracks*@

                    @if (releaseDecendents.SubtitleTracks.Count > 0)
                    {
                        <div class="col-md-4">
                            <h3>Subtitle Tracks</h3>
                            @foreach (var subtitleItem in releaseDecendents.SubtitleTracks)
                            {
                                <div class="border-box">
                                    <p>@Html.ActionLink(subtitleItem.Language.ToString(), "Edit", "SubtitleTracks", new { id = subtitleItem.SubtitleTrackId }, null)</p>
                                    <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "SubtitleTracks", new { id = subtitleItem.SubtitleTrackId}, null)</p><br />
                                </div>
                            }
                            <div class="glyphicon-plus">@Html.ActionLink("Insert Subtitle Tracks", "Create", "SubtitleTracks", new { id = item.VideoReleaseId }, null)</div>
                            <hr />
                        </div>
                    }

                            @*Audio Tracks*@

                            @if (releaseDecendents.AudioTracks.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Audio Tracks</h3>
                                    @foreach (var audioItem in releaseDecendents.AudioTracks)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(audioItem.Language.ToString(), "Edit", "AudioTracks", new { id = audioItem.AudioTrackid }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "AudioTracks", new { id = audioItem.AudioTrackid }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Audio Track", "Create", "AudioTracks", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }
                            @*Regions*@

                            @if (releaseDecendents.Regions.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Regions</h3>
                                    @foreach (var regionItem in releaseDecendents.Regions)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(regionItem.RegionType.RegionName.ToString(), "Edit", "Regions", new { id = regionItem.RegionId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "Regions", new { id = regionItem.RegionId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Region", "Create", "Regions", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Media Files*@

                            @if (releaseDecendents.MediaFiles.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Media Files</h3>
                                    @foreach (var mediaFileItem in releaseDecendents.MediaFiles)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(mediaFileItem.MediaFielId.ToString(), "Edit", "MediaFiles", new { id = mediaFileItem.MediaFielId }, null)</p>
                                            @if (mediaFileItem.Image == true)
                                            {
                                                <img src="data:image/png;base64,@Convert.ToBase64String(mediaFileItem.MediaFile1,0,mediaFileItem.MediaFile1.Length)" width="100" />
                                            }
                                            else
                                            {
                                                mediaFileItem.MediaFielId.ToString();
                                            }
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "MediaFiles", new { id = mediaFileItem.MediaFielId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Media File", "Create", "MediaFiles", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Standards*@

                            @if (releaseDecendents.Standards.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Standards</h3>
                                    @foreach (var standardItem in releaseDecendents.Standards)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(standardItem.StandardType.StandardName.ToString(), "Edit", "Standards", new { id = standardItem.StandardId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "Standards", new { id = standardItem.StandardId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Standard", "Create", "Standards", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Video Box Sets*@

                            @if (releaseDecendents.VideoBoxSets.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Video Box Sets</h3>
                                    @foreach (var boxSetItem in releaseDecendents.VideoBoxSets)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(boxSetItem.VideoBoxSetType.VideoBoxSetDescription.ToString(), "Edit", "VideoBoxSets", new { id = boxSetItem.VideoBoxSetId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoBoxSets", new { id = boxSetItem.VideoBoxSetId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Video Box Set", "Create", "VideoBoxSets", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Shopping Items*@

                            @if (releaseDecendents.ShoppingItems.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Shopping Items</h3>
                                    @foreach (var shoppingItem in releaseDecendents.ShoppingItems)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(shoppingItem.PurchaseLink.ToString(), "Edit", "Shopping Items", new { id = shoppingItem.ShoppingItemId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "Shopping Items", new { id = shoppingItem.ShoppingItemId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Shopping Item", "Create", "Shopping Items", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Formats*@

                            @if (releaseDecendents.Formats.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Formats</h3>
                                    @foreach (var formatItem in releaseDecendents.Formats)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(formatItem.FormatType.FormatName.ToString(), "Edit", "Formats", new { id = formatItem.FormatId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "Formats", new { id = formatItem.FormatId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Format", "Create", "Formats", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Video Versions*@

                            @if (releaseDecendents.Versions.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Video Versions</h3>
                                    @foreach (var videoVersionItem in releaseDecendents.Versions)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(videoVersionItem.VideoVersionType.VideoVersionTitle.ToString(), "Edit", "VideoVersions", new { id = videoVersionItem.VideoVersionId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoVersions", new { id = videoVersionItem.VideoVersionId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Video Version", "Create", "VideoVersions", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                            @*Video Reviews*@

                            @if (releaseDecendents.Reviews.Count > 0)
                    {
                                <div class="col-md-4">
                                    <h3>Video Reviews</h3>
                                    @foreach (var reviewItem in releaseDecendents.Reviews)
                                    {
                                        <div class="border-box">
                                            <p>@Html.ActionLink(reviewItem.Introduction.ToString(), "Edit", "VideoReviews", new { id = reviewItem.VideoReviewId }, null)</p>
                                            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoReviews", new { id = reviewItem.VideoReviewId }, null)</p><br />
                                        </div>
                                    }
                                    <div class="glyphicon-plus">@Html.ActionLink("Insert Video Review", "Create", "VideoReviews", new { id = item.VideoReleaseId }, null)</div>
                                    <hr />
                                </div>
                            }

                        </div>
            </div>
        </div>
    </div>

        }