@model TokuCinema.Models.VideoRelease

@{
    ViewBag.Title = "Create";
    TokuCinema.Models.TokuCinema_DataEntities db = new TokuCinema.Models.TokuCinema_DataEntities();
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Video Release</h4>
        <p>* Indicates required field</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <script src="~/Scripts/ChildFactory.js"></script>

        <script>
            // Instantiate Child Factories
            var versionFactory = new childFactory("versionSelectorPlaceHolder", "Version", "GetVersions", "VideoReleases", "VideoVersionTypeId", "GetVideoMedia", "videoMediaId");
            var regionFactory = new childFactory("regionSelectorPlaceHolder", "Region", "GetRegions", "VideoReleases", "RegionTypeId", "", "");
            var boxSetFactory = new childFactory("boxSetSelectorPlaceHolder", "BoxSet", "GetBoxSets", "VideoReleases", "VideoBoxSetTypeId", "", "");
            var standardFactory = new childFactory("standardSelectorPlaceHolder", "Standard", "GetStandards", "VideoReleases", "StandardTypeId", "", "");
            var formatFactory = new childFactory("formatSelectorPlaceHolder", "Format", "GetFormats", "VideoReleases", "FormatTypeId", "", "");
        </script>      

        @*Used by Child Factories*@
        <span id="versionSelectorPlaceHolder"></span>
        <span id="regionSelectorPlaceHolder"></span>
        <span id="boxSetSelectorPlaceHolder"></span>
        <span id="standardSelectorPlaceHolder"></span>
        <span id="formatSelectorPlaceHolder"></span>

        <div class="form-group">
            @Html.LabelFor(model => model.DistributorId, "DistributorId", htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.DropDownList("DistributorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DistributorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackagingId, "PackagingId", htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.DropDownList("PackagingId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PackagingId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatalogCode, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CatalogCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CatalogCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UPC, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UPC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UPC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscCount, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Create child selector divs for child factories
            versionFactory.createChildSelector();
            regionFactory.createChildSelector();
            boxSetFactory.createChildSelector();
            standardFactory.createChildSelector();
            formatFactory.createChildSelector();
        });
    </script>
}
