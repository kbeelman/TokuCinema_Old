@model TokuCinema.Models.MediaFile

@{
    ViewBag.Title = "Upload";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Upload", "MediaFiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <h4>Media File</h4>
        <p>* Indicates required field</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*Allow manual entry if id is not passed*@
        @if (ViewBag.idPassed == false)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.VideoReleaseId, "VideoReleaseId", htmlAttributes: new { @class = "control-label col-md-2 required-field" })
                <div class="col-md-10">
                    @Html.DropDownList("VideoReleaseId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VideoReleaseId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file", @class = "form-control" })
                @Html.ValidationMessage("CustomError")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Image)
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Video)
                    @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VideoLink, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        @*Hide field entry if id is dynamically passed*@
        @if (ViewBag.idPassed == true)
        {
            @Html.Hidden("VideoReleaseId", (object)ViewBag.VideoReleaseId)
        }

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
