@model TokuCinema.Models.VideoVersionType

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Video Version Type</h4>
        <p>* Indicates required field</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.VideoVersionTitle, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoVersionTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoVersionTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VideoVersionDescription, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoVersionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoVersionDescription, "", new { @class = "text-danger" })
            </div>
        </div>
                
        @*Allow manual entry if id is not passed*@
        @if(ViewBag.idPassed == false)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.VideoMediaId, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
                <div class="col-md-10">
                    @Html.DropDownList("VideoMediaId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VideoMediaId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.AspectRatio, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AspectRatio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AspectRatio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChapterStops, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChapterStops, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChapterStops, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Hide field entry if id is dynamically passed*@
        @if (ViewBag.idPassed == true)
        {
            @Html.Hidden("VideoMediaId", (object)ViewBag.VideoMediaId)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Media")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
