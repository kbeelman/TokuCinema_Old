@model IEnumerable<TokuCinema.Models.Medium>

@{
    ViewBag.Title = "Media Index";
    int iterationCounter = 0; /* Used for dynamically naming the collapsable divs */

    // Data context
    TokuCinema.Models.TokuCinema_DataEntities db = new TokuCinema.Models.TokuCinema_DataEntities();
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@foreach (var item in Model.OrderBy(d => d.VideoMedias.FirstOrDefault().ReleaseDate))
{
    
    iterationCounter++;
    string iterationCollapseName = "collapse" + iterationCounter.ToString();

    <div class="jumbotron row">
        @*Media Objects*@
        <div>
            <h1>@Html.ActionLink(item.MediaOfficialTitle.ToString(), "Edit", new { id = item.MediaId })</h1>
            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", new { id = item.MediaId })</p><br />
            <a href="@Html.DisplayFor(model => item.WikipediaLink)" target="_blank">Wikipedia Link</a><br />
            <p>@item.MediaDescription</p>
            <hr />
        </div>
        @*Accordion start*@
        <div id="accordion" role="tablist" aria-multiselectable="true">
            <div>
                <div role="tab" id="headingOne">
                    <h4>
                        <a class="glyphicon glyphicon-chevron-right" data-toggle="collapse" data-parent="#accordion" href='#@iterationCounter' aria-expanded="false" aria-controls="collapseOne">
                            Details
                        </a>
                    </h4>
                </div>
                <div id='@iterationCounter' class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">

                    @*Video Media Objects*@
                    <div>
                        @foreach (var videoMediaItem in item.VideoMedias)
                        {
                            <div class="col-md-4">
                                <div class="glyphicon-plus">@Html.ActionLink("Insert Video Media", "Create", "VideoMedias", new { id = item.MediaId }, null)</div>
                                <h2>Video Media Details</h2>
                                <p>@Html.ActionLink(item.MediaOfficialTitle.ToString(), "Edit", "VideoMedias", new { id = videoMediaItem.VideoMediaId }, null)</p>
                                <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoMedias", new { id = videoMediaItem.VideoMediaId }, null)</p><br />
                                <label>Release Date </label><p>@Html.DisplayFor(modelItem => videoMediaItem.ReleaseDate)</p>
                                <label>Original Aspect Ratio </label><p>@Html.DisplayFor(modelItem => videoMediaItem.OriginalAspectRatio)<br /></p>
                                <label>Original Runtime </label><p>@Html.DisplayFor(modelItem => videoMediaItem.OriginalRuntime)</p>
                                <hr />

                            </div>

                            // Video Version Objects
                            if (videoMediaItem.VideoVersionTypes.Count > 0)
                            {
                                // Keeps track of VideoVersion records associated with each type
                                List<TokuCinema.Models.VideoVersion> versionsOfType = new List<TokuCinema.Models.VideoVersion>();

                                foreach (var videoVersionTypeItem in videoMediaItem.VideoVersionTypes)
                                {

                                    <div class="col-md-4">
                                        <div class="glyphicon-plus">@Html.ActionLink("Insert Video Version Type", "Create", "VideoVersionTypes", new { id = videoMediaItem.VideoMediaId }, null)</div>
                                        <div class="glyphicon-plus">@Html.ActionLink("Insert Video Version", "Create", "VideoVersions", new { id = videoMediaItem.VideoMediaId }, null)</div>
                                        <h2>Video Version Types</h2>
                                        <p>@Html.ActionLink(@Html.DisplayFor(modelItem => videoVersionTypeItem.VideoVersionTitle).ToString(), "Edit", "VideoVersionTypes", new { id = videoVersionTypeItem.VideoVersionTypeId }, null)</p>
                                        <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoReleases", new { id = videoVersionTypeItem.VideoVersionTypeId }, null)</p><br />
                                        <label>Version Title </label><p>@Html.DisplayFor(modelItem => videoVersionTypeItem.VideoVersionTitle)</p>
                                        <label>Version Description </label><p>@Html.DisplayFor(modelItem => videoVersionTypeItem.VideoVersionDescription)</p>
                                        <hr />
                                    </div>
                                    /*
                                    // Adds VideoVersionRecords to the versionsOfType list
                                    versionsOfType.AddRange(videoVersionTypeItem.VideoVersions);

                                    // A list of video releases associated with this video version type
                                    List<TokuCinema.Models.VideoRelease> releasesWithThisVersionType = new List<TokuCinema.Models.VideoRelease>();

                                    // Get all video releases associated with this version type and add it to the list
                                    foreach (var videoVersionType in versionsOfType)
                                    {
                                        releasesWithThisVersionType.Add(db.VideoReleases.Find(videoVersionType.VideoReleaseId));
                                    }

                                     Video Release Obejcts
                                if (releasesWithThisVersionType.Count > 0)
                                    {

                                        foreach (var videoReleaseItem in releasesWithThisVersionType)
                                        {

                                            <div class="col-md-4">
                                                <div class="glyphicon-plus">@Html.ActionLink("Insert Video Release", "Create", "VideoReleases", new { id = item.MediaId }, null)</div>
                                                <h2>Video Release(s)</h2>
                                                <p>@Html.ActionLink(@Html.DisplayFor(modelItem => videoReleaseItem.Distributor.DistributorName).ToString(), "Edit", "VideoReleases", new { id = videoReleaseItem.VideoReleaseId }, null)</p>
                                                <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoReleases", new { id = videoReleaseItem.VideoReleaseId }, null)</p><br />
                                                <label>Distributor </label><p>@Html.DisplayFor(modelItem => videoReleaseItem.Distributor.DistributorName)</p>
                                                <label>Release Date </label><p>@Html.DisplayFor(modelItem => videoReleaseItem.ReleaseDate)</p>
                                                <hr />
                                            </div>
                                        }
                                    }*/

                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
