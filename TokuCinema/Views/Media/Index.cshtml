@model IEnumerable<TokuCinema.Models.Medium>


@{
    ViewBag.Title = "Media Index";
    int iterationCounter = 0; /* Used for dynamically naming the collapsable divs */

    // Data context
    TokuCinema.Models.TokuCinema_DataEntities db = new TokuCinema.Models.TokuCinema_DataEntities();
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create", "VideoMedias")
</p>

@foreach (var item in Model.OrderBy(d => d.VideoMedias.FirstOrDefault().ReleaseDate))
{
    // Get all media decendents
    TokuCinema.Services.PresentationService.MediaDecendents mediaDecendents = new TokuCinema.Services.PresentationService.MediaDecendents();
    mediaDecendents = TokuCinema.Services.PresentationService.GetMediaDecendents(item.MediaId);

    iterationCounter++;
    string iterationCollapseName = "collapse" + iterationCounter.ToString();

    <div class="jumbotron row">

        @*Medias*@

        <div>
            <h1>@Html.ActionLink(item.MediaOfficialTitle.ToString(), "Edit", new { id = item.MediaId })</h1>
            <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", new { id = item.MediaId })</p><br />
            <a href="@Html.DisplayFor(model => item.WikipediaLink)" target="_blank">Wikipedia Link</a><br />
            <p>@item.MediaDescription</p>
            <hr />
        </div>

        @*Accordion start*@

        <div id="accordion" role="tablist" aria-multiselectable="true">
            <div>
                <div role="tab" id="headingOne">
                    <h4>
                        <a class="glyphicon glyphicon-chevron-right" data-toggle="collapse" data-parent="#accordion" href='#@iterationCollapseName' aria-expanded="false" aria-controls="collapseOne">
                            Details
                        </a>
                    </h4>
                </div>
            <div id='@iterationCollapseName' class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">

                <div class="glyphicon-plus">@Html.ActionLink("Insert Video Media", "Create", "VideoMedias", new { id = item.MediaId }, null)</div>

                @*Video Medias*@
                
                @if (mediaDecendents.VideoMedias.Count > 0)
                {
                    <div class="col-md-4">
                        <h3>Video Media Details</h3>
                        @foreach (var videoMediaItem in mediaDecendents.VideoMedias)
                    {
                            <div class="border-box">
                                <p>@Html.ActionLink(item.MediaOfficialTitle.ToString(), "Edit", "VideoMedias", new { id = videoMediaItem.VideoMediaId }, null)</p>
                                <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoMedias", new { id = videoMediaItem.VideoMediaId }, null)</p><br />
                                <label>Release Date </label><p>@Html.DisplayFor(modelItem => videoMediaItem.ReleaseDate)</p>
                                <label>Original Aspect Ratio </label><p>@Html.DisplayFor(modelItem => videoMediaItem.OriginalAspectRatio)<br /></p>
                                <label>Original Runtime </label><p>@Html.DisplayFor(modelItem => videoMediaItem.OriginalRuntime)</p>
                            </div>
                            <div class="glyphicon-plus">@Html.ActionLink("Insert Version Type", "Create", "VideoVersionTypes", new { id = videoMediaItem.VideoMediaId }, null)</div>
                        }
                        <hr />
                    </div>
                }
                

                @*Video Version Types*@                         

                    @if (mediaDecendents.VideoVersionTypes.Count > 0)
                    {
                        <div class="col-md-4">
                            <h3>Versions of this Media</h3>
                            @foreach (var videoMediaVersionTypeItem in mediaDecendents.VideoVersionTypes)
                            {
                                <div class="border-box">
                                    <p>@Html.ActionLink(videoMediaVersionTypeItem.VideoVersionTitle.ToString(), "Edit", "VideoVersionTypes", new { id = videoMediaVersionTypeItem.VideoVersionTypeId }, null)</p>
                                    <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoVersionTypes", new { id = videoMediaVersionTypeItem.VideoVersionTypeId }, null)</p><br />
                                    <label>Version Title </label><p>@Html.DisplayFor(modelItem => videoMediaVersionTypeItem.VideoVersionTitle)</p>
                                    <label>Version Description </label><p>@Html.DisplayFor(modelItem => videoMediaVersionTypeItem.VideoVersionDescription)</p>
                                    <label>Aspect Ratio </label><p>@Html.DisplayFor(modelItem => videoMediaVersionTypeItem.AspectRatio)</p>
                                    <label>Runtime </label><p>@Html.DisplayFor(modelItem => videoMediaVersionTypeItem.Runtime)</p>
                                    <label>Chapter Stops </label><p>@Html.DisplayFor(modelItem => videoMediaVersionTypeItem.ChapterStops)</p>
                                </div>
                            }
                            <hr />
                        </div>
                    }

                @*Video Releases*@
                    @if(mediaDecendents.VideoReleases.Count > 0)
                    {
                        <div class="col-md-4">
                            <h3>Releases with this Media</h3>
                            @foreach (var videoReleaseItem in mediaDecendents.VideoReleases)
                            {
                                <div class="border-box">
                                    <p>@Html.ActionLink(TokuCinema.Services.PresentationService.GetReleaseName(videoReleaseItem), "Edit", "VideoReleases", new { id = videoReleaseItem.VideoReleaseId }, null)</p>
                                    <p class="glyphicon glyphicon-trash">@Html.ActionLink("Delete", "Delete", "VideoReleases", new { id = videoReleaseItem.VideoReleaseId }, null)</p><br />
                                    <label>Distributor </label><p>@Html.DisplayFor(modelItem => videoReleaseItem.Distributor.DistributorName)</p>
                                    <label>Release Date </label><p>@Html.DisplayFor(modelItem => videoReleaseItem.ReleaseDate)</p>
                                </div>
                            }
                            <hr />
                        </div>
                    }            
            </div>
            </div>
        </div>
    </div>
}
