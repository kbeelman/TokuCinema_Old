@model TokuCinema.Models.Movie

@{
    ViewBag.Title = "Movie Details";
    Layout = "~/Views/Shared/_Layout_Front.cshtml";

}
<h2>@ViewBag.Title</h2>
<!-- Page Content -->
<div class="container">
    <!-- Portfolio Item Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Official Title: @Html.DisplayFor(model => model.Media.MediaOfficialTitle)
            </h1>
        </div>
    </div>
    <!-- /.row -->
    <!-- Portfolio Item Row -->
    <div class="row">
        <div class="col-md-8">
            @if (Model.Media.MediaImageLink != null)
            {
                <img class="img-responsive" src="@Model.Media.MediaImageLink" alt="@Html.DisplayFor(model => model.Media.MediaOfficialTitle)">
            }
            else
            {
                <img class="img-responsive" src="http://placehold.it/750x500" alt="@Html.DisplayFor(model => model.Media.MediaOfficialTitle)">
            }
        </div>
        <div class="col-md-4">
            <h3>@Html.DisplayNameFor(model => model.Media.MediaDescription)</h3>
            @Html.DisplayFor(model => model.Media.MediaDescription)
            <h3>Details</h3>
            <ul>
                <li>
                    <label>@Html.DisplayNameFor(model => model.Media.WikipediaLink)</label>
                    <a href="@Html.DisplayFor(model => model.Media.WikipediaLink)" target="_blank"> @Html.DisplayFor(model => model.Media.MediaOfficialTitle)</a>
                </li>
                <li>
                    <label>@Html.DisplayNameFor(model => model.VideoMedia.ReleaseDate)</label>
                    @Html.DisplayFor(model => model.VideoMedia.ReleaseDate)
                </li>
                <li>
                    <label>@Html.DisplayNameFor(model => model.VideoMedia.OriginalAspectRatio)</label>
                    @Html.DisplayFor(model => model.VideoMedia.OriginalAspectRatio)
                </li>
                <li>
                    <label>@Html.DisplayNameFor(model => model.VideoMedia.OriginalRuntime)</label>
                    @Html.DisplayFor(model => model.VideoMedia.OriginalRuntime)
                </li>
            </ul>
        </div>
    </div>
    <!-- /.row -->
    <!-- Related Projects Row -->
    <div class="row">
        <div class="col-lg-12"><br />
            <h3 class="page-header">Versions</h3>
        </div>
        @*@foreach (var item in Model.VideoMedia.VideoVersionTypes)
            {
            <div class="col-sm-3 col-xs-6">
                @Html.ActionLink(item.VideoVersionTitle, "Details", "VideoVersionTypes", new { id = item.VideoVersionTypeId }, null)
                <img class="img-responsive portfolio-item" src="http://placehold.it/500x300" alt="">
            </div>
            }*@
     </div>
    <div class="row">
        <div id="tabs">
            <ul>
                @for (int i = 0; i < Model.VideoMedia.VideoVersionTypes.Count; i++)
                {
                    <li><a href="#tabs-@i">@Model.VideoMedia.VideoVersionTypes.ElementAt(i).VideoVersionTitle</a></li>
                }
            </ul>
            @for (int i = 0; i < Model.VideoMedia.VideoVersionTypes.Count; i++)
            {
                <div id="tabs-@i">
                    <label>@Html.DisplayNameFor(Model => Model.VideoMedia.VideoVersionTypes.FirstOrDefault().VideoVersionDescription):</label>
                    <p>@Html.DisplayFor(Model => Model.VideoMedia.VideoVersionTypes.ElementAt(i).VideoVersionDescription)</p>
                    <label>@Html.DisplayNameFor(Model => Model.VideoMedia.VideoVersionTypes.FirstOrDefault().Runtime):</label>
                    <p>@Html.DisplayFor(Model => Model.VideoMedia.VideoVersionTypes.ElementAt(i).Runtime)</p>
                    <label>@Html.DisplayNameFor(Model => Model.VideoMedia.VideoVersionTypes.FirstOrDefault().AspectRatio):</label>
                    <p>@Html.DisplayFor(Model => Model.VideoMedia.VideoVersionTypes.ElementAt(i).AspectRatio)</p>
                    <label>@Html.DisplayNameFor(Model => Model.VideoMedia.VideoVersionTypes.FirstOrDefault().ChapterStops):</label>
                    <p>@Html.DisplayFor(Model => Model.VideoMedia.VideoVersionTypes.ElementAt(i).ChapterStops)</p>
                    <br />
                    <label>Releases with this version:</label>
                    @foreach (var item in Model.VideoMedia.VideoVersionTypes.ElementAt(i).VideoVersions)
                    {
                        <br />
                            <span class="glyphicon glyphicon-link"></span>
                            @Html.ActionLink(TokuCinema.Services.PresentationService.GetReleaseName(item.VideoRelease), "Details", "VideoReleases", new { id = item.VideoReleaseId }, null)
                    }
                </div>
            }
        </div>
    </div>

    </div>
    <!-- /.row -->
    <hr>
</div>
<!-- /.container -->
<p>
    @Html.ActionLink("Back to List", "Index", "Dashboard")
</p>